name: Build and Deploy
on: push

jobs:
  build-client:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./client
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm install
      - run: npm run build --if-present
      - run: npm test
        env:
          CI: true

  build-server:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./server
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm install
      - run: npm run build --if-present
      - run: npm test
        env:
          CI: true

  docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: "Create env file"
        run: |
          echo "${{ secrets.ENV_FILE }}" > .env
        working-directory: ./server
      - name: Build Image
        run: docker compose -f docker-compose.yml build

  # deploy:
  #   runs-on: ubuntu-latest
  # steps:
  #   - uses: actions/checkout@v3
  #   - run: npm ci && npm run build --if-present
  #   - uses: FirebaseExtended/action-hosting-deploy@v0
  #     with:
  #       repoToken: "${{ secrets.GITHUB_TOKEN }}"
  #       firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT_HOSTING_TEST_DBD63 }}"
  #       channelId: live
  #       projectId: hosting-test-dbd63
